# data relevant to the application as a whole
%global = (
	name => "truncfield",
	description => "truncates specified fields from a string-delimited data stream",
	version => "2.0",
	trailing_opts => "[file ...]",
	usage_extra => "if -d is not specified and DELIMITER enviroment variable is defined, that value will be used.",
	do_long_opts => 1,
	preproc_extra => '',
	copyright => <<END_COPYRIGHT
copyright 2007, Doubleclick Inc.
END_COPYRIGHT
);

# descriptions of individual command-line arguments
# valid types are
#	flag		- no argument
#	var		- required argument
#	var_optional	- optional argument
#	custom_flag	- no arg, and specify parseopt_code 
#	custom_var	- required arg, and specify parseopt_code 
#	custom_var_optional - optional arg, and specify parseopt_code 
@args = ( {
	  name => 'help',
	  shortopt => 'h',
	  longopt => 'help',
	  type => 'flag',
	  required => 0,
	  main_code => 'usage(argv[0]); exit(EXIT_HELP);',
	  description => 'print this message and exit'
	},
	{
	  name => 'version',
	  shortopt => 'V',
	  longopt => 'version',
	  type => 'flag',
	  required => 0,
	  main_code => 'version(); exit(1);',
	  description => 'print version info and exit'
	},
	{
	  name        => 'delim',
	  shortopt    => 'd',
	  longopt     => 'delimiter',
	  required    => 0,
	  type        => 'var',
	  description => 'field-separator string',
	},
	{
	  name        => 'fields',
	  shortopt    => 'f',
	  longopt     => 'field',
	  required    => 1,
	  type        => 'var',
	  description => 'list of fields to be truncated',
	},
	{
	  name        => 'output_fname',
	  shortopt    => 'o',
	  longopt     => 'output-file',
	  required    => 0,
	  type        => 'var',
	  description => 'name of file to which output should be written',
	},
	{
	  name        => 'append_fname',
	  shortopt    => 'a',
	  longopt     => 'append-file',
	  required    => 0,
	  type        => 'var',
	  description => 'name of file to which output should be appended',
	}
);

