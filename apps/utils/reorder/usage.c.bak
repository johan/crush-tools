/************************************
  copyright
 ************************************/
#include "reorder_main.h"
#include "reorder.h"

void usage( char *bin ) {
	fprintf(stderr, "\nreorder: swaps columns in a delimited flat file\n");
	fprintf(stderr, "usage: %s <options> [ file(s) ]\n", bin);
	fprintf(stderr, "options:\n");
	fprintf(stderr, "\t-h\tprint this message and exit.\n");
	fprintf(stderr, "\t-v\tprint version information and exit.\n");
	fprintf(stderr, "\t-V\tprint verbose status messages to console\n");
	fprintf(stderr, "\t-d <delim>\tspecifies delimiting string\n");
	fprintf(stderr, "\t-s <swap>\tspecifies two fields to swap\n\n");
	fprintf(stderr, "example: %s -d : -s 1,3 -s 2,4 /etc/passwd\n\n", bin);
return;
} 

/* this won't be used outside of this file */
void init_cmdargs( struct cmdargs * );

void parse_args ( int argc, char **argv, struct cmdargs *args){
	int c;

	init_cmdargs(args);

	while( (c = getopt(argc, argv, "hvVd:s:")) != -1 ){
		switch (c) {
			case 'h':
				args->help = 1;
				break;
			case 'v':
				args->version = 1;
				break;
			case 'V':
				args->verbose = 1;
				break;
			case 'd':
				args->delim = optarg;
				break;
			case 's':
				if( pushswap(optarg, REORDER_TYPE_SWAP ) != 0 ){
					fprintf(stderr, "invalid fields in \"-s %s\"\n", optarg);
					exit(EXIT_HELP);
				}
				break;
			case 'm':
				if( pushswap(optarg, REORDER_TYPE_MOVE ) != 0 ){
					fprintf(stderr, "invalid fields in \"-s %s\"\n", optarg);
					exit(EXIT_HELP);
				}
				break;
			default: break;
		}
	}
	return;
}


void init_cmdargs( struct cmdargs *args ){
	/* this set all pointers to null, int values to 0 */
	memset( args, 0, sizeof(struct cmdargs) );
}

void version ( void ){
	fprintf(stderr, "%s\n", APPLICATION_VERSION);
}

