# data relevant to the application as a whole
%global = (
	name => "reorder",
	category => "General file manipulation",
	description => "swaps columns in a delimited flat file",
	version => "0.1",
	trailing_opts => "[file(s)]",
	usage_extra => "the fields param is exclusive of swap and move - if -f and -m or -s are\\nspecified, only -f will be used.\\n\\nexample: reorder -d : -s 1,3 -m 2,4 /etc/passwd\\n\\nwould swap fields 1 and 3, and then would move field 2 to position 4.",
	do_long_opts => 1,
	preproc_extra => '#include "reorder.h"',
	copyright => <<END_COPYRIGHT
copyright 2005
END_COPYRIGHT
);

# descriptions of individual command-line arguments
@args = ( {
	  name => 'help',
	  shortopt => 'h',
	  longopt => 'help',
	  type => 'flag',
	  required => 0,
	  main_code => 'usage(argv[0]); exit(EXIT_HELP);',
	  description => 'print this message and exit'
	},
	{
	  name => 'version',
	  shortopt => 'V',
	  longopt => 'version',
	  type => 'flag',
	  required => 0,
	  main_code => 'version(); exit(1);',
	  description => 'print version info and exit'
	},
	{
	  name => 'verbose',
	  shortopt => 'v',
	  longopt => 'verbose',
	  type => 'custom_flag',
	  required => 0,
	  parseopt_code => 'args->verbose++;',
	  description => 'print verbose messages during execution'
	},
	{
	  name => 'delim',
	  shortopt => 'd',
	  longopt => 'delim',
	  type => 'var',
	  required => 0,
	  description => 'specifies delimiting string'
	},
	{
 	  name => 'swap',
 	  shortopt => 's',
 	  longopt => 'swap',
 	  type => 'custom_var',
 	  required => 0,
 	  description => 'specifies two fields to swap (ex: -s 1,3)',
	  parseopt_code => <<ENDCODE
				if( pushswap(optarg, REORDER_TYPE_SWAP ) != 0 ){
					fprintf(stderr, "invalid fields in \\"-s %s\\"\\n", optarg);
					exit(EXIT_HELP);
				}
ENDCODE
	},
	{
 	  name => 'move',
 	  shortopt => 'm',
 	  longopt => 'move',
 	  type => 'custom_var',
 	  required => 0,
 	  description => 'specifies a field to move to a new position\\n\\t\\t\\t\\t\\t(ex: -s 3,1)',
	  parseopt_code => <<ENDCODE
				if( pushswap(optarg, REORDER_TYPE_MOVE ) != 0 ){
					fprintf(stderr, "invalid fields in \\"-s %s\\"\\n", optarg);
					exit(EXIT_HELP);
				}
ENDCODE
	},
	{
 	  name => 'fields',
 	  shortopt => 'f',
 	  longopt => 'fields',
 	  type => 'var',
 	  required => 0,
 	  description => 'specifies fields to use to create a new string\\n\\t\\t\\t\\t\\t(ex: -f 3,4,1,5,2)',
	}
);
