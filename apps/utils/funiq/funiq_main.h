/************************************
  copyright 2006

 ************************************/

/** @file funiq_main.h
 *  @brief defines structure to hold command-line arguments and protypes
 *  some functions.
 *
 *  generated by cgen.  http://home.thatbox.net/~k4thryn/code/cgen/
 */

#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <unistd.h>

#ifndef FUNIQ_MAIN_H
#define FUNIQ_MAIN_H

/* user-defined things in arg table */

/* end user-defined things */

/** exit code to use when invoked with usage() or version(). */
#define EXIT_HELP 1
/** exit code to use when everything was okay. */
#define EXIT_OKAY 0
/** exit code to use when there was an i/o-related error. */
#define EXIT_FILE_ERR -1
/** exit code to use when there was an error allocating memory. */
#define EXIT_MEM_ERR -2

/** current version of the application. */
#define APPLICATION_VERSION "0.1"
/** short description of what the app does. */
#define APPLICATION_DESCRIPTION "deduplicates adjacent rows of data having common field values"

/** structure to hold commandline options & arguments.
 */
struct cmdargs {
	int help;	/**< @brief print this message and exit */
	int version;	/**< @brief print version info and exit */
	int verbose;	/**< @brief print verbose messages during execution */
	char *delim;	/**< @brief field separator (default: 0xfe) */
	char *fields;	/**< @brief fields to consider in the deduplication */
};


/** parses commandline arguments and puts the info into a cmdargs struct.
 * @param argc number of arguments
 * @param argv array of argument strings
 * @param args structure to hold the parsed options & arguments
 */
void parse_args ( int, char **, struct cmdargs *);

/** prints application help information.
 * @param bin application name as invoked on the commandline
 */
void usage ( char * );

/** @brief prints application version.
  */
void version ( void );

/** @brief beginning of primary application logic section called by main().
  * 
  * @param args contains the parsed cmd-line options & arguments.
  * @param argc number of cmd-line arguments.
  * @param argv list of cmd-line arguments
  * @param optind index of the first non-option cmd-line argument.
  * 
  * @return exit status for main() to return.
  */
int funiq( struct cmdargs *args, int argc, char *argv[], int optind );

#endif
