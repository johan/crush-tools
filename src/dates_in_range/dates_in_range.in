#!CRUSH_PERL_PATH -w

#  Copyright 2008 Google Inc.
#
#  Licensed under the Apache License, Version 2.0 (the "License");
#  you may not use this file except in compliance with the License.
#  You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
#  Unless required by applicable law or agreed to in writing, software
#  distributed under the License is distributed on an "AS IS" BASIS,
#  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#  See the License for the specific language governing permissions and
#  limitations under the License.

use strict;
use Date::Calc qw(Add_Delta_Days);
use Getopt::Long;

my ($help, $s, $e, $f, $inc);
$s = $e = '';
$f = 'YYYY-MM-DD';
$inc = 1;

&GetOptions("help" => \$help,
            "start=s" => \$s,
            "end=s" => \$e,
            "format=s" => \$f,
            "increment=n" => \$inc);

if ($help ||                       # user asked for it
    $s !~ /^\d{4}-\d{2}-\d{2}$/ || # malformed start date
    $e !~ /^\d{4}-\d{2}-\d{2}$/ || # malformed end date
    $e lt $s) {                    # end is before start
  usage();
  exit(1);
}

my $c = $s;

do {
  my @a = split(/-/, $c);
  print date_format($f, @a), qq(\n);
  $c = sprintf("%.4d-%.2d-%.2d", Add_Delta_Days(@a, $inc));
} while ($c le $e);

exit(0);

sub usage {
  print STDERR <<ENDUSAGE;

prints all of the dates within a range

usage: $0 <-s YYYY-MM-DD> <-e YYYY-MM-DD>
options:
  -s, --start <DATE>   beginning of the range
  -e, --end <DATE>     end of the range
  -f, --format <STR>   specifies an alternate date format
  -i, --increment <N>  specifies the number of days by which to
                       increment

for date format string usage, see \`perldoc DART::DateFormat\`.  default is
ISO 8601.

ENDUSAGE
}

m4_include(date_parse_format.pl)
