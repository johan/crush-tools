# data relevant to the application as a whole
%global = (
  name          => "fieldsplit",
  description   => "splits a file into multiple files according to a particular field value.",
  version       => "2.1",
  trailing_opts => "[file ...]",
  usage_extra   => "Either -f or -F must be specified.",
  do_long_opts  => 1,
  preproc_extra => '',
  language      => 'c',
  copyright     => <<END_COPYRIGHT
copyright 2009
END_COPYRIGHT
);

# descriptions of individual command-line arguments
# valid types are
#  flag                - no argument
#  var                 - required argument
#  var_optional        - optional argument
#  custom_flag         - no arg, and specify parseopt_code 
#  custom_var          - required arg, and specify parseopt_code 
#  custom_var_optional - optional arg, and specify parseopt_code 
@args = ( {
    name        => 'help',
    shortopt    => 'h',
    longopt     => 'help',
    type        => 'flag',
    required    => 0,
    main_code   => 'usage(argv[0]); exit(EXIT_HELP);',
    description => 'print this message and exit'
  },
  {
    name        => 'version',
    shortopt    => 'V',
    longopt     => 'version',
    type        => 'flag',
    required    => 0,
    main_code   => 'version(); exit(1);',
    description => 'print version info and exit'
  },
  {
    name => 'field',
    shortopt => 'f',
    longopt => 'field',
    type => 'var',
    required => 0,
    description => 'index of field to split on',
  },
  {
    name => 'field_label',
    shortopt => 'F',
    longopt => 'field-label',
    type => 'var',
    required => 0,
    description => 'label of field to split on',
  },
  {
    name => 'delim',
    shortopt => 'd',
    longopt => 'delim',
    type => 'var',
    required => 0,
    description => 'field separator string (default: 0xfe)',
  },
  {
    name => 'path',
    shortopt => 'p',
    longopt => 'path',
    type => 'var',
    required => 0,
    description => 'directory in which output files should be placed (default: ./)',
  },
  {
    name => 'name',
    shortopt => 'n',
    longopt => 'name',
    type => 'var',
    required => 0,
    description => 'output file prefix',
  },
  {
    name => 'suffix',
    shortopt => 's',
    longopt => 'suffix',
    type => 'var',
    required => 0,
    description => 'output file suffix',
  },
  {
    name => 'keep_header',
    shortopt => 'k',
    longopt => 'keep',
    type => 'flag',
    required => 0,
    description => 'preserve the input header row in all output files',
  },
  {
    name => 'buffer_line_count',
    shortopt => 'S',
    longopt => 'buffer-lines',
    type => 'var',
    required => 0,
    description => 'line buffer size - DEPRECATED.',
  },
  {
    name => 'buckets',
    shortopt => 'b',
    longopt => 'buckets',
    type => 'var',
    required => 0,
    description => 'split data into BUCKETS files, guaranteeing that like ' .
                   'field values are in the same output file.',
  },
  {
    name => 'xform_names',
    shortopt => 'x',
    longopt => 'xform-names',
    type => 'var',
    required => 0,
    description => 'user-supplied substitution regex to transform output names (e.g. \'s/[^-\\w]//g\')'
  }
);
